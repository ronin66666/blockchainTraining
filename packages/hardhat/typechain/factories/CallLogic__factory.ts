/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CallLogic, CallLogicInterface } from "../CallLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102a53803806102a583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610212806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063771602f714610030575b600080fd5b61004361003e366004610166565b610055565b60405190815260200160405180910390f35b6040516024810183905260448101829052600090819060640160408051601f198184030181529181526020820180516001600160e01b031663771602f760e01b1790526000805491519293509182916001600160a01b0316906100b9908590610188565b6000604051808303816000865af19150503d80600081146100f6576040519150601f19603f3d011682016040523d82523d6000602084013e6100fb565b606091505b5091509150816101485760405162461bcd60e51b815260206004820152601460248201527318d85b1b081d1bc81c1c9bde1e4819985a5b195960621b604482015260640160405180910390fd5b8080602001905181019061015c91906101c3565b9695505050505050565b6000806040838503121561017957600080fd5b50508035926020909101359150565b6000825160005b818110156101a9576020818601810151858301520161018f565b818111156101b8576000828501525b509190910192915050565b6000602082840312156101d557600080fd5b505191905056fea26469706673582212208d8ebf7b5a747f083e03dd8b659e8c2d58861594c6e438301d2107c20e6dbd0c64736f6c63430008090033";

export class CallLogic__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CallLogic> {
    return super.deploy(_proxy, overrides || {}) as Promise<CallLogic>;
  }
  getDeployTransaction(
    _proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_proxy, overrides || {});
  }
  attach(address: string): CallLogic {
    return super.attach(address) as CallLogic;
  }
  connect(signer: Signer): CallLogic__factory {
    return super.connect(signer) as CallLogic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallLogicInterface {
    return new utils.Interface(_abi) as CallLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CallLogic {
    return new Contract(address, _abi, signerOrProvider) as CallLogic;
  }
}
